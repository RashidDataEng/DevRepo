{
	"name": "Model_CachetoODS",
	"properties": {
		"description": "Copy new or updated rows only from database using external control table",
		"activities": [
			{
				"name": "LookupLastWaterMark",
				"description": "Retrieve the last high-watermark value stored in external control table",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Load Active Trigger Begin 1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Landing_watermarktableDataset",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LookupCurrentWaterMark",
				"description": "Retrieve  the current maximum value in watermark column of source data store",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set Run Start 1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT DATEADD(dd,0,[ETL Last Run Start]) as NewWatermarkValue\nFROM ca.Control_Table\nWHERE [Group]=10 AND Entity='Model'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ControlTableDataset",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "DeltaCopyfromDB",
				"description": "Copy activity to use query to filter the delta data by > last high-watermark and <= current high-watermark from source database, and then only copy the changes to the destination store.",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LookupCurrentWaterMark",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LookupLastWaterMark",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Truncate Landing_Invoice Procedure",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LookupDeltaOffset",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": {
							"value": "select ID\n      ,MfgBarcode\n      ,UPCBarcode\n      ,RootModelCode\n      ,PackageCode\n      ,Link\n      ,Identifier\n      ,BarcodeSchema\n      ,AllowSpecialOrder\n      ,UpdateImportPricing\n      ,WarrantyTypeCode\n      ,AllowPackageWty\n      ,ShippingMethodCode\n      ,Volume\n      ,UnloadTime\n      ,AutoNumber\n      ,ShipAnySerial\n      ,SalePrice\n      ,SaleStartDate\n      ,SaleEndDate\n      ,Feature1\n      ,Feature2\n      ,Feature3\n      ,Feature4\n      ,Feature5\n      ,Feature6\n      ,Feature7\n      ,Feature8\n      ,Feature9\n      ,Feature10\n      ,Dimension1\n      ,Dimension2\n      ,Warranty1\n      ,Warranty2\n      ,PTDesc\n      ,InstallationEstimate\n      ,UpdateImportCost\n      ,Dimension3\n      ,Misc2Code\n      ,Misc3Code\n      ,Misc4Code\n      ,Misc5Code\n      ,MiscPrompt\n      ,Misc2Prompt\n      ,Misc3Prompt\n      ,Misc4Prompt\n      ,Misc5Prompt\n      ,ExtWarrantyPrompt\n      ,ExtWarranty2Prompt\n      ,ExtWarranty3Prompt\n      ,ExtWarranty4Prompt\n      ,ExtWarranty5Prompt\n      ,ExtWarranty2Code\n      ,ExtWarranty3Code\n      ,ExtWarranty4Code\n      ,ExtWarranty5Code\n      ,Item1Prompt\n      ,Item2Prompt\n      ,Item3Prompt\n      ,Item4Prompt\n      ,Item5Prompt\n      ,Item1Code\n      ,Item2Code\n      ,Item3Code\n      ,Item4Code\n      ,Item5Code\n      ,Model1Prompt\n      ,Model2Prompt\n      ,Model3Prompt\n      ,Model4Prompt\n      ,Model5Prompt\n      ,Model1Code\n      ,Model2Code\n      ,Model3Code\n      ,Model4Code\n      ,Model5Code\n      ,ImmediateReservedDays\n      ,Spiff2\n      ,Spiff2EndDate\n      ,Spiff2StartDate\n      ,CommentPrompt\n      ,Comment2Prompt\n      ,Comment3Prompt\n      ,Comment4Prompt\n      ,Comment5Prompt\n      ,Comment2Code\n      ,Comment3Code\n      ,Comment4Code\n      ,Comment5Code\n      ,Discount1\n      ,Discount2\n      ,Discount3\n      ,Discount4\n      ,Discount5\n      ,Discount6\n      ,Discount7\n      ,Discount8\n      ,Discount9\n      ,Discount10\n      ,NotUMRP\n      ,Flooring\n      ,MasterPackQty\n      ,ABCRating\n      ,ActualSpiff\n      ,SalePrice2\n      ,SaleStartDate2\n      ,SaleEndDate2\n      ,Weight\n      ,LinqProductId\n      ,BeingDiscontinued\n      ,Active\n      ,AverageCost\n      ,Barcode\n      ,BeginYearQty\n      ,BinLocationCode\n      ,BrandCode\n      ,Code\n      ,Color\n      ,CommentCode\n      ,DateCreated\n      ,DateModified\n      ,Description\n      ,EOQ\n      ,Equivalent\n      ,ExtWarrantyCode\n      ,Field1\n      ,Field2\n      ,Field3\n      ,Field4\n      ,Field5\n      ,InventoryTypeCode\n      ,LandedCost\n      ,LandingFactor\n      ,LastCost\n      ,LastDateOrdered\n      ,LastDateReceived\n      ,LastDateSold\n      ,ListPrice\n      ,LocQOH\n      ,LocYTD\n      ,MainStockQOH\n      ,MainStockYTD\n      ,ManufacturersWarranty\n      ,MfgReturned\n      ,MiscCode\n      ,NewUsed\n      ,Note\n      ,Obsolete\n      ,OriginalCost\n      ,PicturePath\n      ,Points\n      ,PriceTag\n      ,ProductCode\n      ,ReplacementCost\n      ,ReplacementCostEffectiveDate\n      ,ResizePicture\n      ,SKU\n      ,Spiff\n      ,SpiffEndDate\n      ,SpiffStartDate\n      ,StandardCost\n      ,Stock\n      ,Substituted\n      ,SupplierCode\n      ,Tax1\n      ,Tax1CostList\n      ,Tax1Included\n      ,Tax1Percentage\n      ,Tax2\n      ,Tax3\n      ,TotalBooked\n      ,TotalLastYear\n      ,TotalMax\n      ,TotalMin\n      ,TotalNotAvailable\n      ,TotalPrevLastYear\n      ,TotalQOO\n      ,TotalReserved\n      ,UserCreated\n      ,UserModified\nfrom \n@{pipeline().parameters.Data_Source_Table_Name} \n\t where \n@{pipeline().parameters.Data_Source_WaterMarkColumn_modified} > '@{activity('LookupDeltaOffset').output.firstRow.DeltaOffset}' \n\t and @{pipeline().parameters.Data_Source_WaterMarkColumn_modified} <= '@{activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue}' \n\nUNION\n\nselect ID\n      ,MfgBarcode\n      ,UPCBarcode\n      ,RootModelCode\n      ,PackageCode\n      ,Link\n      ,Identifier\n      ,BarcodeSchema\n      ,AllowSpecialOrder\n      ,UpdateImportPricing\n      ,WarrantyTypeCode\n      ,AllowPackageWty\n      ,ShippingMethodCode\n      ,Volume\n      ,UnloadTime\n      ,AutoNumber\n      ,ShipAnySerial\n      ,SalePrice\n      ,SaleStartDate\n      ,SaleEndDate\n      ,Feature1\n      ,Feature2\n      ,Feature3\n      ,Feature4\n      ,Feature5\n      ,Feature6\n      ,Feature7\n      ,Feature8\n      ,Feature9\n      ,Feature10\n      ,Dimension1\n      ,Dimension2\n      ,Warranty1\n      ,Warranty2\n      ,PTDesc\n      ,InstallationEstimate\n      ,UpdateImportCost\n      ,Dimension3\n      ,Misc2Code\n      ,Misc3Code\n      ,Misc4Code\n      ,Misc5Code\n      ,MiscPrompt\n      ,Misc2Prompt\n      ,Misc3Prompt\n      ,Misc4Prompt\n      ,Misc5Prompt\n      ,ExtWarrantyPrompt\n      ,ExtWarranty2Prompt\n      ,ExtWarranty3Prompt\n      ,ExtWarranty4Prompt\n      ,ExtWarranty5Prompt\n      ,ExtWarranty2Code\n      ,ExtWarranty3Code\n      ,ExtWarranty4Code\n      ,ExtWarranty5Code\n      ,Item1Prompt\n      ,Item2Prompt\n      ,Item3Prompt\n      ,Item4Prompt\n      ,Item5Prompt\n      ,Item1Code\n      ,Item2Code\n      ,Item3Code\n      ,Item4Code\n      ,Item5Code\n      ,Model1Prompt\n      ,Model2Prompt\n      ,Model3Prompt\n      ,Model4Prompt\n      ,Model5Prompt\n      ,Model1Code\n      ,Model2Code\n      ,Model3Code\n      ,Model4Code\n      ,Model5Code\n      ,ImmediateReservedDays\n      ,Spiff2\n      ,Spiff2EndDate\n      ,Spiff2StartDate\n      ,CommentPrompt\n      ,Comment2Prompt\n      ,Comment3Prompt\n      ,Comment4Prompt\n      ,Comment5Prompt\n      ,Comment2Code\n      ,Comment3Code\n      ,Comment4Code\n      ,Comment5Code\n      ,Discount1\n      ,Discount2\n      ,Discount3\n      ,Discount4\n      ,Discount5\n      ,Discount6\n      ,Discount7\n      ,Discount8\n      ,Discount9\n      ,Discount10\n      ,NotUMRP\n      ,Flooring\n      ,MasterPackQty\n      ,ABCRating\n      ,ActualSpiff\n      ,SalePrice2\n      ,SaleStartDate2\n      ,SaleEndDate2\n      ,Weight\n      ,LinqProductId\n      ,BeingDiscontinued\n      ,Active\n      ,AverageCost\n      ,Barcode\n      ,BeginYearQty\n      ,BinLocationCode\n      ,BrandCode\n      ,Code\n      ,Color\n      ,CommentCode\n      ,DateCreated\n      ,DateModified\n      ,Description\n      ,EOQ\n      ,Equivalent\n      ,ExtWarrantyCode\n      ,Field1\n      ,Field2\n      ,Field3\n      ,Field4\n      ,Field5\n      ,InventoryTypeCode\n      ,LandedCost\n      ,LandingFactor\n      ,LastCost\n      ,LastDateOrdered\n      ,LastDateReceived\n      ,LastDateSold\n      ,ListPrice\n      ,LocQOH\n      ,LocYTD\n      ,MainStockQOH\n      ,MainStockYTD\n      ,ManufacturersWarranty\n      ,MfgReturned\n      ,MiscCode\n      ,NewUsed\n      ,Note\n      ,Obsolete\n      ,OriginalCost\n      ,PicturePath\n      ,Points\n      ,PriceTag\n      ,ProductCode\n      ,ReplacementCost\n      ,ReplacementCostEffectiveDate\n      ,ResizePicture\n      ,SKU\n      ,Spiff\n      ,SpiffEndDate\n      ,SpiffStartDate\n      ,StandardCost\n      ,Stock\n      ,Substituted\n      ,SupplierCode\n      ,Tax1\n      ,Tax1CostList\n      ,Tax1Included\n      ,Tax1Percentage\n      ,Tax2\n      ,Tax3\n      ,TotalBooked\n      ,TotalLastYear\n      ,TotalMax\n      ,TotalMin\n      ,TotalNotAvailable\n      ,TotalPrevLastYear\n      ,TotalQOO\n      ,TotalReserved\n      ,UserCreated\n      ,UserModified\nfrom \n@{pipeline().parameters.Data_Source_Table_Name} \n\t where @{pipeline().parameters.Data_Source_WaterMarkColumn_modified} IS NULL ",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"dataIntegrationUnits": 0
				},
				"inputs": [
					{
						"referenceName": "OdbcDataSource",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Landing_ModelDataset",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "UpdateWaterMark",
				"description": "Stored procedure activity to store the new high-watermark value into external control table for delta data loading. ",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Get Run End 2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[Control_ETLTimes]",
					"storedProcedureParameters": {
						"Column_Name": {
							"value": {
								"value": "@{pipeline().parameters.ETLEndTimeColumn}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Entity": {
							"value": {
								"value": "@{pipeline().parameters.ControlTable_Entity}",
								"type": "Expression"
							},
							"type": "String"
						},
						"GetRunEnd": {
							"value": {
								"value": "@{activity('Get Run End 2').output.firstRow.RunEnd2}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"Group": {
							"value": {
								"value": "@{pipeline().parameters.ControlTable_Group2}",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Secondary1LinkedService_Test",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Truncate Landing_Invoice Procedure",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Load Active Trigger Begin 1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[LandingTablesTruncate_Model]"
				},
				"linkedServiceName": {
					"referenceName": "Secondary1_Landing Linked Service",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Test",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Load Active Trigger Begin 2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[Model_Delete]"
				},
				"linkedServiceName": {
					"referenceName": "Secondary1LinkedService_Test",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Test_2_Insert",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Test",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[Model_Insert]"
				},
				"linkedServiceName": {
					"referenceName": "Secondary1LinkedService_Test",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Load Active Trigger Begin 1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[Control_LoadActive]",
					"storedProcedureParameters": {
						"Entity": {
							"value": {
								"value": "@{pipeline().parameters.ControlTable_Entity}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Group": {
							"value": {
								"value": "@{pipeline().parameters.ControlTable_Group1}",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Secondary1LinkedService_Test",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Load Active Trigger End 2",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "UpdateWaterMark",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[Control_LoadActive]",
					"storedProcedureParameters": {
						"Entity": {
							"value": {
								"value": "@{pipeline().parameters.ControlTable_Entity}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Group": {
							"value": {
								"value": "@{pipeline().parameters.ControlTable_Group2}",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Secondary1LinkedService_Test",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LookupDeltaOffset",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Load Active Trigger Begin 1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT DATEADD(dd,-[DeltaOffset (Days)],[ETL Last Run End]) AS DeltaOffset\nFROM ca.Control_Table\nWHERE Entity='Model' AND\n             [Group]=10",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ControlTableDataset",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Set Run Start 1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Get Run Start 1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[Control_ETLTimes]",
					"storedProcedureParameters": {
						"Column_Name": {
							"value": {
								"value": "@{pipeline().parameters.ETLBeginTimeColumn}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Entity": {
							"value": {
								"value": "@{pipeline().parameters.ControlTable_Entity}",
								"type": "Expression"
							},
							"type": "String"
						},
						"GetRunEnd": {
							"value": {
								"value": "@{activity('Get Run Start 1').output.firstRow.RunStart1}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"Group": {
							"value": {
								"value": "@{pipeline().parameters.ControlTable_Group1}",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Secondary1LinkedService_Test",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Set Run End 1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Get Run End 1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[Control_ETLTimes]",
					"storedProcedureParameters": {
						"Column_Name": {
							"value": {
								"value": "@{pipeline().parameters.ETLEndTimeColumn}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Entity": {
							"value": {
								"value": "@{pipeline().parameters.ControlTable_Entity}",
								"type": "Expression"
							},
							"type": "String"
						},
						"GetRunEnd": {
							"value": {
								"value": "@{activity('Get Run End 1').output.firstRow.RunEnd1}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"Group": {
							"value": {
								"value": "@{pipeline().parameters.ControlTable_Group1}",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Secondary1LinkedService_Test",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Set Run Start 2",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Get Run Start 2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[Control_ETLTimes]",
					"storedProcedureParameters": {
						"Column_Name": {
							"value": {
								"value": "@{pipeline().parameters.ETLBeginTimeColumn}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Entity": {
							"value": {
								"value": "@{pipeline().parameters.ControlTable_Entity}",
								"type": "Expression"
							},
							"type": "String"
						},
						"GetRunEnd": {
							"value": {
								"value": "@{activity('Get Run Start 2').output.firstRow.RunStart2}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"Group": {
							"value": {
								"value": "@{pipeline().parameters.ControlTable_Group2}",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Secondary1LinkedService_Test",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Load Active Trigger End 1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Set Run End 1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[Control_LoadActive]",
					"storedProcedureParameters": {
						"Entity": {
							"value": {
								"value": "@{pipeline().parameters.ControlTable_Entity}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Group": {
							"value": {
								"value": "@{pipeline().parameters.ControlTable_Group1}",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Secondary1LinkedService_Test",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Load Active Trigger Begin 2",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Set Run Start 2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[Control_LoadActive]",
					"storedProcedureParameters": {
						"Entity": {
							"value": {
								"value": "@{pipeline().parameters.ControlTable_Entity}",
								"type": "Expression"
							},
							"type": "String"
						},
						"Group": {
							"value": {
								"value": "@{pipeline().parameters.ControlTable_Group2}",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Secondary1LinkedService_Test",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Get Run Start 1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT  DATEADD(hh,-7,current_timestamp) AS [RunStart1]",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ControlTableDataset",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Get Run End 1",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "DeltaCopyfromDB",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT  DATEADD(hh,-7,current_timestamp) AS [RunEnd1]",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ControlTableDataset",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Get Run Start 2",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Load Active Trigger End 1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT  DATEADD(hh,-7,current_timestamp) AS [RunStart2]",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ControlTableDataset",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Get Run End 2",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Test_2_Insert",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT  DATEADD(hh,-7,current_timestamp) AS [RunEnd2]",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ControlTableDataset",
						"type": "DatasetReference"
					}
				}
			}
		],
		"parameters": {
			"Data_Source_Table_Name": {
				"type": "String",
				"defaultValue": "SQLUser.Model"
			},
			"Data_Source_WaterMarkColumn": {
				"type": "String",
				"defaultValue": "DateModified"
			},
			"Data_Destination_Container": {
				"type": "String",
				"defaultValue": "rd.Model"
			},
			"Data_Destination_Directory": {
				"type": "String"
			},
			"Control_Table_Table_Name": {
				"type": "String",
				"defaultValue": "watermark_table"
			},
			"Control_Table_Column_Name": {
				"type": "String",
				"defaultValue": "Invoicewatermark_value"
			},
			"Data_Source_WaterMarkColumn_modified": {
				"type": "string",
				"defaultValue": "SQLUser.Model.DateModified"
			},
			"DeltaOffset": {
				"type": "int",
				"defaultValue": -1
			},
			"ControlTable_Entity": {
				"type": "string",
				"defaultValue": "Model"
			},
			"ControlTable_Group1": {
				"type": "int",
				"defaultValue": 10
			},
			"ControlTable_Group2": {
				"type": "int",
				"defaultValue": 20
			},
			"ETLBeginTimeColumn": {
				"type": "string",
				"defaultValue": "ETL Last Run Start"
			},
			"ETLEndTimeColumn": {
				"type": "string",
				"defaultValue": "ETL Last Run End"
			}
		},
		"variables": {
			"Run Start 1": {
				"type": "String"
			},
			"Run Start 2": {
				"type": "String"
			},
			"Run End 1": {
				"type": "String"
			},
			"Run End 2": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2021-06-04T14:10:29Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}