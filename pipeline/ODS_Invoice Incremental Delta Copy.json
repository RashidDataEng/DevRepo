{
	"name": "ODS_Invoice Incremental Delta Copy",
	"properties": {
		"description": "Copy new or updated rows only from database using external control table",
		"activities": [
			{
				"name": "LookupLastWaterMark",
				"description": "Retrieve the last high-watermark value stored in external control table",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderQuery": {
							"value": "select @{pipeline().parameters.Control_Table_Column_Name} as WatermarkValue from @{pipeline().parameters.Control_Table_Table_Name}",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlDatabaseExternal_ControlTable",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "LookupCurrentWaterMark",
				"description": "Retrieve  the current maximum value in watermark column of source data store",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('select MAX(',pipeline().parameters.Data_Source_WaterMarkColumn, ') as NewWatermarkValue from ',pipeline().parameters.Data_Source_Table_Name)",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Landing_InvoiceDataset",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "DeltaCopyfromDB",
				"description": "Copy activity to use query to filter the delta data by > last high-watermark and <= current high-watermark from source database, and then only copy the changes to the destination store.",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LookupCurrentWaterMark",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LookupLastWaterMark",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Update Modified Records",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT * FROM rd.Invoice\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink"
					},
					"enableStaging": false,
					"dataIntegrationUnits": 0
				},
				"inputs": [
					{
						"referenceName": "Landing_InvoiceDataset",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Secondary1_Sink",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "UpdateWaterMark",
				"description": "Stored procedure activity to store the new high-watermark value into external control table for delta data loading. ",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DeltaCopyfromDB",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[update_watermark]",
					"storedProcedureParameters": {
						"LastModifiedtime": {
							"value": {
								"value": "@{activity('LookupCurrentWaterMark').output.firstRow.NewWatermarkValue}",
								"type": "Expression"
							},
							"type": "DateTime"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Controltablelinkedservice",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Update Modified Records",
				"type": "ExecuteDataFlow",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "InvoiceDataflow",
						"type": "DataFlowReference",
						"datasetParameters": {
							"source2": {
								"TableName": "rd.Invoice"
							},
							"sink1": {
								"TableName": "rd.Invoice"
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			}
		],
		"parameters": {
			"Data_Source_Table_Name": {
				"type": "String",
				"defaultValue": "rd.Invoice"
			},
			"Data_Source_WaterMarkColumn": {
				"type": "String",
				"defaultValue": "sysCreated"
			},
			"Data_Destination_Container": {
				"type": "String",
				"defaultValue": "rd.Invoice"
			},
			"Data_Destination_Directory": {
				"type": "String"
			},
			"Control_Table_Table_Name": {
				"type": "String",
				"defaultValue": "invoicewatermark_table"
			},
			"Control_Table_Column_Name": {
				"type": "String",
				"defaultValue": "watermark_value"
			}
		},
		"annotations": [],
		"lastPublishTime": "2021-05-13T21:21:57Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}