{
	"name": "Test",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Landing_InvoiceAddressDataset",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "InvoiceAddressODS",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "InvoiceAddressODS",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Join1"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "source(output(\n\t\tID as integer,\n\t\tTripNo as integer,\n\t\tParentDateStamp as date,\n\t\tParentLineTimeStamp as string,\n\t\tsysCreated as timestamp,\n\t\tsysModified as timestamp,\n\t\tAmount as decimal(15,4),\n\t\tCode as string,\n\t\tDateStamp as date,\n\t\tDescription as string,\n\t\tInPackage as string,\n\t\tInvoiceCode as string,\n\t\tLineNo as integer,\n\t\tLineTimeStamp as string,\n\t\tLineType as string,\n\t\tLocationCode as string,\n\t\tQty as integer,\n\t\tStatus as string,\n\t\tTax1 as boolean,\n\t\tTax2 as boolean,\n\t\tTax3 as boolean\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource(output(\n\t\tID as integer,\n\t\tTripNo as integer,\n\t\tParentDateStamp as date,\n\t\tParentLineTimeStamp as string,\n\t\tsysCreated as timestamp,\n\t\tsysModified as timestamp,\n\t\tAmount as decimal(15,4),\n\t\tCode as string,\n\t\tDateStamp as date,\n\t\tDescription as string,\n\t\tInPackage as string,\n\t\tInvoiceCode as string,\n\t\tLineNo as integer,\n\t\tLineTimeStamp as string,\n\t\tLineType as string,\n\t\tLocationCode as string,\n\t\tQty as integer,\n\t\tStatus as string,\n\t\tTax1 as boolean,\n\t\tTax2 as boolean,\n\t\tTax3 as boolean\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source2\nsource1, source2 join(source1@InvoiceCode == source2@InvoiceCode\n\t&& source1@DateStamp == source2@DateStamp\n\t&& source1@LineTimeStamp == source2@LineTimeStamp,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 alterRow(updateIf(and(equals(source1@InvoiceCode,source2@InvoiceCode),equals(source1@DateStamp,source2@DateStamp))&&equals(source1@LineTimeStamp,source2@LineTimeStamp))) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tID as integer,\n\t\tTripNo as integer,\n\t\tParentDateStamp as date,\n\t\tParentLineTimeStamp as string,\n\t\tsysCreated as timestamp,\n\t\tsysModified as timestamp,\n\t\tAmount as decimal(15,4),\n\t\tCode as string,\n\t\tDateStamp as date,\n\t\tDescription as string,\n\t\tInPackage as string,\n\t\tInvoiceCode as string,\n\t\tLineNo as integer,\n\t\tLineTimeStamp as string,\n\t\tLineType as string,\n\t\tLocationCode as string,\n\t\tQty as integer,\n\t\tStatus as string,\n\t\tTax1 as boolean,\n\t\tTax2 as boolean,\n\t\tTax3 as boolean\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['InvoiceCode','DateStamp','LineTimeStamp'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
		}
	}
}